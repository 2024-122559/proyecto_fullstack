{
    "sourceFile": "app/Controllers/PeliculasController.php",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1759766046415,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1759766046415,
            "name": "Commit-0",
            "content": "<?php\r\nnamespace App\\Controllers;\r\nuse App\\Models\\PeliculaModel;\r\n\r\nclass PeliculasController extends BaseController\r\n{\r\n    public function listar()\r\n    {\r\n        $peliculaModel = new PeliculaModel();\r\n        $datos['peliculas'] = $peliculaModel->findAll();\r\n        return view('peliculas/peliculasview', $datos);\r\n    }\r\n\r\n    public function crear()\r\n    {\r\n        return view('peliculas/crearpeliculas');\r\n    }\r\n\r\n    public function guardar()\r\n    {\r\n        $peliculaModel = new PeliculaModel();\r\n        $titulo = $this->request->getPost('titulo');\r\n\r\n        // Check for duplicate movie title\r\n        $existe = $peliculaModel->where('titulo', $titulo)->first();\r\n        if ($existe) {\r\n            log_message('debug', 'Título duplicado detectado: ' . $titulo);\r\n            return redirect()->to(base_url('peliculas/crear'))\r\n                           ->with('error', 'La película \"' . $titulo . '\" ya existe.')\r\n                           ->withInput();\r\n        }\r\n\r\n        $datos = [\r\n            'titulo' => $titulo,\r\n            'id_genero' => $this->request->getPost('id_genero'),\r\n            'duracion_minutos' => $this->request->getPost('duracion_minutos'),\r\n            'sinopsis' => $this->request->getPost('sinopsis'),\r\n            'poster_url' => $this->request->getPost('poster_url'),\r\n            'director' => $this->request->getPost('director'),\r\n            'clasificacion' => $this->request->getPost('clasificacion'),\r\n            'fecha_estreno' => $this->request->getPost('fecha_estreno'),\r\n            'id_estado' => $this->request->getPost('id_estado'),\r\n            'fecha_creacion' => date('Y-m-d H:i:s'),\r\n            'fecha_actualizacion' => date('Y-m-d H:i:s')\r\n        ];\r\n\r\n        try {\r\n            log_message('debug', 'Intentando insertar película: ' . json_encode($datos));\r\n            $peliculaModel->insert($datos);\r\n            log_message('debug', 'Película insertada, redirigiendo a peliculas/listar');\r\n            return redirect()->to(base_url('peliculas/listar'))->with('mensaje', 'agregado');\r\n        } catch (\\Exception $e) {\r\n            log_message('error', 'Error al insertar película: ' . $e->getMessage());\r\n            return redirect()->to(base_url('peliculas/crear'))\r\n                           ->with('error', 'Error al guardar la película: ' . $e->getMessage())\r\n                           ->withInput();\r\n        }\r\n    }\r\n\r\n    public function editar($id)\r\n    {\r\n        $peliculaModel = new PeliculaModel();\r\n        $datos['pelicula'] = $peliculaModel->find($id);\r\n        if (!$datos['pelicula']) {\r\n            return redirect()->to(base_url('peliculas/listar'))\r\n                           ->with('error', 'La película no existe.');\r\n        }\r\n        return view('peliculas/modificarpeliculas', $datos);\r\n    }\r\n\r\n    public function actualizar($id)\r\n    {\r\n        $peliculaModel = new PeliculaModel();\r\n        $datos = [\r\n            'titulo' => $this->request->getPost('titulo'),\r\n            'id_genero' => $this->request->getPost('id_genero'),\r\n            'duracion_minutos' => $this->request->getPost('duracion_minutos'),\r\n            'sinopsis' => $this->request->getPost('sinopsis'),\r\n            'poster_url' => $this->request->getPost('poster_url'),\r\n            'director' => $this->request->getPost('director'),\r\n            'clasificacion' => $this->request->getPost('clasificacion'),\r\n            'fecha_estreno' => $this->request->getPost('fecha_estreno'),\r\n            'id_estado' => $this->request->getPost('id_estado'),\r\n            'fecha_actualizacion' => date('Y-m-d H:i:s')\r\n        ];\r\n\r\n        try {\r\n            $peliculaModel->update($id, $datos);\r\n            return redirect()->to(base_url('peliculas/listar'))->with('mensajes', 'Película actualizada correctamente');\r\n        } catch (\\Exception $e) {\r\n            log_message('error', 'Error al actualizar película: ' . $e->getMessage());\r\n            return redirect()->to(base_url('peliculas/editar/' . $id))\r\n                           ->with('error', 'Error al actualizar la película: ' . $e->getMessage())\r\n                           ->withInput();\r\n        }\r\n    }\r\n\r\n    public function eliminar($id)\r\n    {\r\n        $peliculaModel = new PeliculaModel();\r\n        try {\r\n            $peliculaModel->delete($id);\r\n            return redirect()->to(base_url('peliculas/listar'))->with('mensaje', 'se jue');\r\n        } catch (\\Exception $e) {\r\n            log_message('error', 'Error al eliminar película: ' . $e->getMessage());\r\n            return redirect()->to(base_url('peliculas/listar'))\r\n                           ->with('error', 'Error al eliminar la película: ' . $e->getMessage());\r\n        }\r\n    }\r\n}"
        }
    ]
}